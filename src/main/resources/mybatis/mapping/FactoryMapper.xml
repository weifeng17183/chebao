<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.justfind.dao.FactoryMapper">
	<resultMap id="BaseResultMap" type="com.justfind.entity.Factory">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="factory_name" property="factoryName" jdbcType="VARCHAR" />
		<result column="factory_adress" property="factoryAdress"
			jdbcType="VARCHAR" />
		<result column="factory_desc" property="factoryDesc" jdbcType="VARCHAR" />
		<result column="factory_mobile" property="factoryMobile"
			jdbcType="VARCHAR" />
		<result column="factory_contract" property="factoryContract"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, factory_name, factory_adress, factory_desc,
		factory_mobile,
		factory_contract
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from factory
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from factory
	</select>

	<select id="queryFactoryList" resultMap="BaseResultMap"
		parameterType="com.justfind.entity.Factory">
		select
		<include refid="Base_Column_List" />
		from factory
		<where>
			<if test="factoryName != null">
				and factory_name like '%${factoryName}%'
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		factory
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.justfind.entity.Factory">
		insert into factory (id,
		factory_name, factory_adress,
		factory_desc, factory_mobile,
		factory_contract
		)
		values (#{id,jdbcType=INTEGER},
		#{factoryName,jdbcType=VARCHAR},
		#{factoryAdress,jdbcType=VARCHAR},
		#{factoryDesc,jdbcType=VARCHAR}, #{factoryMobile,jdbcType=VARCHAR},
		#{factoryContract,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.justfind.entity.Factory">
		insert into factory
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="factoryName != null">
				factory_name,
			</if>
			<if test="factoryAdress != null">
				factory_adress,
			</if>
			<if test="factoryDesc != null">
				factory_desc,
			</if>
			<if test="factoryMobile != null">
				factory_mobile,
			</if>
			<if test="factoryContract != null">
				factory_contract,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="factoryName != null">
				#{factoryName,jdbcType=VARCHAR},
			</if>
			<if test="factoryAdress != null">
				#{factoryAdress,jdbcType=VARCHAR},
			</if>
			<if test="factoryDesc != null">
				#{factoryDesc,jdbcType=VARCHAR},
			</if>
			<if test="factoryMobile != null">
				#{factoryMobile,jdbcType=VARCHAR},
			</if>
			<if test="factoryContract != null">
				#{factoryContract,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.justfind.entity.Factory">
		update factory
		<set>
			<if test="factoryName != null">
				factory_name = #{factoryName,jdbcType=VARCHAR},
			</if>
			<if test="factoryAdress != null">
				factory_adress = #{factoryAdress,jdbcType=VARCHAR},
			</if>
			<if test="factoryDesc != null">
				factory_desc = #{factoryDesc,jdbcType=VARCHAR},
			</if>
			<if test="factoryMobile != null">
				factory_mobile = #{factoryMobile,jdbcType=VARCHAR},
			</if>
			<if test="factoryContract != null">
				factory_contract = #{factoryContract,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.justfind.entity.Factory">
		update factory
		set
		factory_name = #{factoryName,jdbcType=VARCHAR},
		factory_adress =
		#{factoryAdress,jdbcType=VARCHAR},
		factory_desc =
		#{factoryDesc,jdbcType=VARCHAR},
		factory_mobile =
		#{factoryMobile,jdbcType=VARCHAR},
		factory_contract =
		#{factoryContract,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>