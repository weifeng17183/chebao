<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.justfind.dao.UsersMapper">
	<resultMap id="BaseResultMap" type="com.justfind.entity.Users">
		<id column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="mobile_num" property="mobileNum" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="user_states" property="userStates" jdbcType="INTEGER" />
		<result column="user_type" property="userType" jdbcType="INTEGER" />
		<result column="register_date" property="registerDate"
			jdbcType="TIMESTAMP" />
		<result column="open_id" property="openId" jdbcType="VARCHAR" />
		<result column="inviter" property="inviter" jdbcType="VARCHAR" />
		<result column="memo" property="memo" jdbcType="VARCHAR" />

		<result column="factory_id" property="factoryId" jdbcType="INTEGER" />
		<association property="factory" javaType="com.justfind.entity.Factory"
			column="factory_id" select="com.justfind.dao.FactoryMapper.selectByPrimaryKey"></association>

		<collection property="carInfoList" column="user_id"
			ofType="com.justfind.entity.CarInfo" select="selectCarInfoList"></collection>
		<collection property="addressList" column="user_id"
			ofType="com.justfind.entity.UserAddress" select="selectAddressList"></collection>
	</resultMap>

	<resultMap id="SimpleMap" type="com.justfind.entity.Users">
		<id column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="mobile_num" property="mobileNum" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="user_states" property="userStates" jdbcType="INTEGER" />
		<result column="user_type" property="userType" jdbcType="INTEGER" />
		<result column="register_date" property="registerDate"
			jdbcType="TIMESTAMP" />
		<result column="open_id" property="openId" jdbcType="VARCHAR" />
		<result column="inviter" property="inviter" jdbcType="VARCHAR" />
		<result column="memo" property="memo" jdbcType="VARCHAR" />
		<result column="factory_id" property="factoryId" jdbcType="INTEGER" />
		<association property="factory" javaType="com.justfind.entity.Factory"
			column="factory_id" select="com.justfind.dao.FactoryMapper.selectByPrimaryKey"></association>
	</resultMap>

	<select id="queryUserList" resultMap="BaseResultMap"
		parameterType="com.justfind.entity.Users">
		select * from users
		<where>
			<if test="name != null">
				and (name LIKE
				CONCAT('%',#{name},'%')
				or mobile_num LIKE
				CONCAT('%',#{name},'%')
				or memo LIKE
				CONCAT('%',#{name},'%'))
			</if>
			<if test="userType != null">
				and user_type = #{userType}
			</if>
			<if test="factoryId != null">
				and factory_id = #{factoryId}
			</if>
		</where>
	</select>

	<select id="selectCarInfoList" parameterType="java.lang.Integer"
		resultMap="com.justfind.dao.CarInfoMapper.BaseResultMap">
		SELECT * FROM car_info WHERE user_id = #{userId}
	</select>

	<select id="selectAddressList" parameterType="java.lang.Integer"
		resultMap="com.justfind.dao.UserAddressMapper.BaseResultMap">
		SELECT * FROM user_address WHERE user_id = #{userId}
	</select>

	<select id="queryCount" parameterType="map" resultType="java.lang.Integer">
		select count(user_id) from users
		<where>
			<if test="name != null">
				and name like '%${name}%'
			</if>
			<if test="beginDate!=null and beginDate!=''">
				and register_date &gt;= #{beginDate}
			</if>
			<if test="endDate!=null and endDate!=''">
				and register_date &lt;= #{endDate}
			</if>
			<if test="userType!=null">
				and user_type = #{userType ,jdbcType=INTEGER}
			</if>
		</where>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select *
		from users
		where user_id =
		#{userId,jdbcType=BIGINT}
	</select>

	<select id="selectByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select *
		from users
		where user_id =
		#{userId,jdbcType=BIGINT}
	</select>

	<select id="selectByOpenId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select *
		from users
		where open_id =
		#{openId,jdbcType=VARCHAR}
	</select>

	<select id="selectByMobileNum" resultMap="SimpleMap"
		parameterType="java.lang.String">
		select * from users where
		mobile_num =
		#{mobileNum,jdbcType=VARCHAR}
	</select>

	<select id="selectByType" resultMap="SimpleMap" parameterType="java.lang.Integer">
		select * from users
		<where>
			user_states = 1
			<if test="userType != null">
				and user_type =
				#{userType,jdbcType=VARCHAR}
			</if>
			<if test="factoryId != null">
				and factory_id =
				#{factoryId,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from users
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.justfind.entity.Users"
		useGeneratedKeys="true" keyProperty="userId">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="mobileNum!=null">
				mobile_num,
			</if>
			<if test="userStates != null">
				user_states,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="registerDate != null">
				register_date,
			</if>
			<if test="openId != null">
				open_id,
			</if>
			<if test="inviter != null">
				inviter,
			</if>
			<if test="memo != null">
				memo,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="factoryId != null">
				factory_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="mobileNum!=null">
				#{mobileNum,jdbcType=VARCHAR},
			</if>
			<if test="userStates != null">
				#{userStates,jdbcType=INTEGER},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=INTEGER},
			</if>
			<if test="registerDate != null">
				#{registerDate,jdbcType=TIMESTAMP},
			</if>
			<if test="openId != null">
				#{openId,jdbcType=VARCHAR},
			</if>
			<if test="inviter != null">
				#{inviter,jdbcType=VARCHAR},
			</if>
			<if test="memo != null">
				#{memo,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="factoryId != null">
				#{factoryId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.justfind.entity.Users">
		update users
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="mobileNum != null">
				mobile_num = #{mobileNum,jdbcType=VARCHAR},
			</if>
			<if test="userStates != null">
				user_states = #{userStates,jdbcType=INTEGER},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=INTEGER},
			</if>
			<if test="registerDate != null">
				register_date = #{registerDate,jdbcType=TIMESTAMP},
			</if>
			<if test="openId != null">
				open_id = #{openId,jdbcType=VARCHAR},
			</if>
			<if test="inviter != null">
				inviter = #{inviter,jdbcType=VARCHAR},
			</if>
			<if test="memo != null">
				memo = #{memo,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="factoryId != null">
				factory_id = #{factoryId,jdbcType=INTEGER},
			</if>
		</set>
		<where>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT}
			</if>
		</where>
	</update>


	<select id="selectExsitMobile" resultType="java.lang.Integer"
		parameterType="com.justfind.entity.Users">
		select
		count(1)
		from Users
		<where>
			<if test="mobileNum != null">
				and mobile_num = #{mobileNum,jdbcType=VARCHAR}
			</if>
			<if test="userId != null">
				and user_id!=#{userId,jdbcType=INTEGER}
			</if>
		</where>
	</select>

</mapper>