<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.justfind.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.justfind.entity.Role">
		<id column="role_id" jdbcType="INTEGER" property="roleId" />
		<result column="role_name" jdbcType="VARCHAR"
			property="roleName" />
		<result column="role_sign" jdbcType="VARCHAR"
			property="roleSign" />
		<result column="role_desc" jdbcType="VARCHAR"
			property="roleDesc" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_name, role_sign, role_desc
	</sql>
	<select id="selectByAdminId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select r.role_id, r.role_name, r.role_sign, r.role_desc
		from role r left join admin_role ur on r.role_id = ur.role_id
		left join admin u on u.admin_id = ur.admin_id where u.admin_id
		=#{adminId,jdbcType=BIGINT}
	</select>
	<select id="getMaxId" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select max(role_id) from role
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.justfind.entity.Role">
		insert into role (role_id, role_name, role_sign,
		role_desc)
		values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR},
		#{roleSign,jdbcType=VARCHAR},
		#{roleDesc,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.justfind.entity.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleSign != null">
				role_sign,
			</if>
			<if test="roleDesc != null">
				role_desc,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleSign != null">
				#{roleSign,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				#{roleDesc,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.justfind.entity.Role">
		update role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleSign != null">
				role_sign = #{roleSign,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				role_desc = #{roleDesc,jdbcType=VARCHAR},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.justfind.entity.Role">
		update role
		set role_name = #{roleName,jdbcType=VARCHAR},
		role_sign = #{roleSign,jdbcType=VARCHAR},
		role_desc = #{roleDesc,jdbcType=VARCHAR}
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>

	<select id="queryListAll"
		parameterType="com.justfind.entity.Role" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
	</select>

	<select id="selectAll" parameterType="com.justfind.entity.Role"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
	</select>
</mapper>